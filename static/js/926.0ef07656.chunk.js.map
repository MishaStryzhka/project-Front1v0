{"version":3,"file":"static/js/926.0ef07656.chunk.js","mappings":"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","sources":["components/Checkbox/Checkbox.stuled.js","components/FormLogin/FormLogin.styled.js","images/icons/IconGoogle.js","components/OrBoxAotorization/OrBoxAotorization.styled.js","images/icons/IconFacebook.js","components/OrBoxAotorization/OrBoxAotorization.jsx","components/PassValidateBox/PassValidateBox.styled.js","images/icons/IconDone.js","components/PassValidateBox/PassValidateBox.js","components/FormRegister/FormRegister.styled.js","components/CheckboxToggle/CheckboxToggle.styled.js","components/CheckboxToggle/CheckboxToggle.js","components/FormRegister/FormRegister.jsx","components/FormTypeUser/FormTypeUser.styled.js","components/FormTypeUser/FormTypeUser.js","components/Modal/Modal.styled.js","images/icons/IconCross.js","components/Modal/Modal.js","pages/authPages/RegisterPage.jsx","schemas/RegisterSchema.js","schemas/index.js","schemas/loginSchema.js"],"sourcesContent":["import { Field } from 'formik';\nimport { styled } from 'styled-components';\n\nexport const StyledLabel = styled.label``;\n\nexport const StyledField = styled(Field)`\n  display: none;\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { Form, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  padding-top: 75px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  color: ${({ theme }) => theme.color.secondary};\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n\n  padding-top: 75px;\n  margin: auto;\n  width: 800px;\n`;\n\nexport const ImputWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const FieldStyled = styled(Field)`\n  display: block;\n\n  position: relative;\n\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.5;\n  letter-spacing: 0.64px;\n\n  padding: 15px;\n  width: 800px;\n  height: 50px;\n  box-sizing: border-box;\n  border-radius: 10px;\n\n  border: 1px solid\n    ${({ theme, error }) => (error ? theme.color.error : theme.color.main)};\n  outline: none;\n\n  color: ${({ theme }) => theme.color.btnLogOut};\n`;\n\nexport const LabelCheckboxStyled = styled.label`\n  display: flex;\n  column-gap: 20px;\n  padding-top: 22px;\n\n  // background-color: red;\n`;\n\nexport const FieldCheckboxStyled = styled(Field)`\n  // height: 20px;\n  // width: 20px;\n  // background: url('unchecked.png') no-repeat left center;\n  display: none;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n\n  display: flex;\n  align-items: center;\n\n  padding: 18px 36px;\n  height: 57px;\n  box-sizing: border-box;\n\n  color: ${({ theme }) => theme.color.secondary};\n  background-color: ${({ theme }) => theme.color.secondaryMain};\n\n  border: 3px solid ${({ theme }) => theme.color.secondaryMain};\n  border-radius: 10px;\n`;\n\nexport const StyledRefreshPassword = styled(NavLink)`\n  width: 800px;\n  padding-top: 20px;\n\n  color: ${({ theme }) => theme.color.main};\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n\n  &:hover {\n    text-decoration-line: underline;\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n\n  display: flex;\n  align-items: center;\n\n  padding: 18px 36px;\n  height: 57px;\n  box-sizing: border-box;\n\n  color: ${({ theme }) => theme.color.secondary};\n\n  border: 3px solid ${({ theme }) => theme.color.secondaryMain};\n  border-radius: 10px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 0.48px;\n\n  color: #888;\n`;\n\nexport const TextError = styled.p`\n  color: ${({ theme }) => theme.color.error};\n  margin-top: 4px;\n  margin-left: 16px;\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 12px;\n  font-style: italic;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const SuccessText = styled.div`\n  margin-top: 4px;\n  margin-left: 16px;\n  font-size: 12px;\n  line-height: 1.3;\n  font-weight: 400;\n  color: ${({ theme }) => theme.color.indicator};\n`;\n\nexport const WrapIcons = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 16px;\n  display: flex;\n  gap: 8px;\n  @media screen and (min-width: 768px) {\n    gap: 15px;\n  }\n`;\n\nexport const NavWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  box-sizing: border-box;\n  column-gap: 80px;\n  // width: 800px;\n  padding-top: 52px;\n`;\n","import * as React from 'react';\nconst IconGoogle = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={36}\n    height={36}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"#4285F4\"\n      fillRule=\"evenodd\"\n      d=\"M35.5 18.398c0-1.241-.114-2.434-.325-3.58H18.357v6.77h9.61c-.414 2.187-1.672 4.04-3.563 5.281v4.391h5.771c3.377-3.046 5.325-7.533 5.325-12.862Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#34A853\"\n      fillRule=\"evenodd\"\n      d=\"M18.356 35.5c4.822 0 8.864-1.567 11.818-4.24l-5.77-4.39c-1.6 1.05-3.645 1.67-6.048 1.67-4.65 0-8.587-3.079-9.992-7.215H2.398v4.534c2.939 5.72 8.978 9.641 15.958 9.641Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#FBBC05\"\n      fillRule=\"evenodd\"\n      d=\"M8.365 21.325A10.329 10.329 0 0 1 7.805 18c0-1.154.203-2.275.56-3.325v-4.534H2.4a17.209 17.209 0 0 0 0 15.718l5.966-4.534Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#EA4335\"\n      fillRule=\"evenodd\"\n      d=\"M18.356 7.46c2.622 0 4.976.883 6.827 2.617l5.121-5.02C27.212 2.235 23.17.5 18.356.5c-6.98 0-13.02 3.922-15.958 9.64l5.966 4.535c1.405-4.136 5.341-7.215 9.992-7.215Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default IconGoogle;\n","import { styled } from 'styled-components';\n\nexport const Line = styled.div`\n  width: 350px;\n  height: 2px;\n  background-color: ${({ theme }) => theme.color.main};\n`;\n\nexport const LineText = styled.p`\n  color: ${({ theme }) => theme.color.main};\n  text-align: center;\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 16px;\n  font-style: italic;\n  font-weight: 400;\n  line-height: normal;\n`;\n","import * as React from 'react';\n\nconst IconFacebook = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={51}\n    height={51}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"#337FFF\"\n      d=\"m34.163 27.186.998-6.331h-6.144V16.74c0-1.731.858-3.423 3.6-3.423h2.833V7.925a34.363 34.363 0 0 0-4.987-.425c-5.057 0-8.358 3.037-8.358 8.527v4.828H16.5v6.331h5.605V42.5h6.912V27.186h5.146Z\"\n    />\n  </svg>\n);\nexport default IconFacebook;\n","import IconGoogle from 'images/icons/IconGoogle';\nimport { Line, LineText } from './OrBoxAotorization.styled';\nimport IconFacebook from 'images/icons/IconFacebook';\n\nconst OrBoxAotorization = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: 800,\n          paddingTop: 52,\n          alignItems: 'center',\n        }}\n      >\n        <Line />\n        <LineText>або</LineText>\n        <Line />\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          columnGap: 100,\n          width: 800,\n          paddingTop: 27,\n          alignItems: 'center',\n        }}\n      >\n        <a href=\"https://project-back1v0.onrender.com/api/users/google/\">\n          <IconGoogle />\n        </a>\n        <a href=\"https://project-back1v0.onrender.com/api/users/facebook/\">\n          <IconFacebook />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default OrBoxAotorization;\n","import { styled } from 'styled-components';\n\nexport const ValidateBox = styled.ul`\n  padding-top: 20px;\n  display: flex;\n  flex-direction: column;\n  row-gap: 12px;\n`;\n\nexport const ValidateBoxItem = styled.li`\n  display: flex;\n  column-gap: 5px;\n  align-items: center;\n`;\n","import * as React from 'react';\nconst IconDone = props => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={16}\n    height={16}\n    fill=\"none\"\n  >\n    <path\n      fill=\"#04827A\"\n      d=\"m14.658 4.899-8.165 7.775a1.173 1.173 0 0 1-.379.241 1.217 1.217 0 0 1-1.273-.241L1.342 9.34a1.11 1.11 0 0 1-.253-.36 1.066 1.066 0 0 1 .253-1.212 1.219 1.219 0 0 1 1.273-.241c.142.055.27.137.379.24l2.673 2.549 7.34-6.991c.218-.209.515-.326.825-.326.31 0 .607.117.826.326.219.208.342.491.342.786 0 .295-.123.578-.342.787Z\"\n    />\n  </svg>\n);\nexport default IconDone;\n","import { string } from 'yup';\n// import IconCheckboxSmall from 'images/icons/IconCheckboxSmall';\nimport { useEffect, useState } from 'react';\n// import IconCheckboxSmallChack from 'images/icons/IconCheckboxSmallChack';\nimport { ValidateBox, ValidateBoxItem } from './PassValidateBox.styled';\nimport IconDone from 'images/icons/IconDone';\n\nconst passwordMin8Valid = string().min(8, '');\nconst passwordLatinLettersValid = string().matches(\n  /^(?=.*[a-zA-Z])[a-zA-Z0-9]+$/,\n  ''\n);\nconst passwordLettersUpperCaseValid = string().matches(/^(?=.*[A-Z])/, '');\nconst passwordOneNumberValid = string().matches(/^(?=.*[0-9])/, '');\n\nconst PassValidateBox = ({ value }) => {\n  const [passwordMin8, setPasswordMin8] = useState(false);\n  const [passwordLatinLetters, setPasswordLatinLetters] = useState(false);\n  const [passwordLettersUpperCase, setPasswordLettersUpperCase] =\n    useState(false);\n  const [passwordOneNumber, setPasswordOneNumber] = useState(false);\n\n  useEffect(() => {\n    passwordMin8Valid.isValid(value).then(res => setPasswordMin8(res));\n    passwordLatinLettersValid\n      .isValid(value)\n      .then(res => setPasswordLatinLetters(res));\n    passwordLettersUpperCaseValid\n      .isValid(value)\n      .then(res => setPasswordLettersUpperCase(res));\n    passwordOneNumberValid\n      .isValid(value)\n      .then(res => setPasswordOneNumber(res));\n  }, [value]);\n\n  return (\n    <ValidateBox>\n      <ValidateBoxItem>\n        {passwordMin8 ? <IconDone /> : <div style={{ width: 16 }} />}\n        <p>мінімум 8 символів</p>\n      </ValidateBoxItem>\n      <ValidateBoxItem>\n        {passwordLatinLetters ? <IconDone /> : <div style={{ width: 16 }} />}\n        <p>латинські літери</p>\n      </ValidateBoxItem>\n      <ValidateBoxItem>\n        {passwordLettersUpperCase ? (\n          <IconDone />\n        ) : (\n          <div style={{ width: 16 }} />\n        )}\n        <p>1 велика літера</p>\n      </ValidateBoxItem>\n      <ValidateBoxItem>\n        {passwordOneNumber ? <IconDone /> : <div style={{ width: 16 }} />}\n        <p>1 цифра</p>\n      </ValidateBoxItem>\n    </ValidateBox>\n  );\n};\n\nexport default PassValidateBox;\n","import { Field } from 'formik';\nimport { styled } from 'styled-components';\n\nexport const LabelCheckboxStyled = styled.label`\n  display: flex;\n  justify-content: center;\n  column-gap: 40px;\n`;\n\nexport const FieldCheckboxStyled = styled(Field)``;\n\nexport const LabelCheckboxText = styled.span`\n  color: ${({ theme, value }) =>\n    value ? theme.color.secondary : theme.color.btn};\n  text-align: center;\n  align-self: center;\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n","import { styled } from 'styled-components';\n\nexport const ToggleWrap = styled.div`\n  display: flex;\n  align-items: center;\n  //   justify-content: ${({ value }) => (value ? 'flex-start' : 'flex-end')};\n  //   transition: justify-content 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  width: 75px;\n  height: 30px;\n  padding: 0 1.5px;\n\n  border-radius: 15px;\n  border: 1px solid black;\n`;\n\nexport const Toggle = styled.div`\n  transform: ${({ value }) => (value ? 'translateX(0px)' : 'translateX(48px)')};\n  transition: transform 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  width: 26px;\n  height: 26px;\n  background: ${({ theme }) => theme.color.main};\n  border-radius: 15px;\n`;\n","import { StyledField, StyledLabel } from '../Checkbox/Checkbox.stuled';\nimport { Toggle, ToggleWrap } from './CheckboxToggle.styled';\n\nconst CheckboxToggle = e => {\n  return (\n    <StyledLabel>\n      <StyledField type={e.type} name={e.field.name} />\n      <ToggleWrap value={e.field.value}>\n        <Toggle value={e.field.value} />\n      </ToggleWrap>\n    </StyledLabel>\n  );\n};\n\nexport default CheckboxToggle;\n","import {\n  Button,\n  FieldStyled,\n  FormStyled,\n  ImputWrap,\n  Label,\n  NavWrap,\n  TextError,\n  Title,\n} from 'components/FormLogin/FormLogin.styled';\nimport PassValidateBox from 'components/PassValidateBox/PassValidateBox';\nimport { Formik } from 'formik';\nimport { validationRegisterSchema } from 'schemas';\nimport {\n  FieldCheckboxStyled,\n  LabelCheckboxStyled,\n  LabelCheckboxText,\n} from './FormRegister.styled';\nimport CheckboxToggle from 'components/CheckboxToggle/CheckboxToggle';\nimport { useAuth } from 'hooks';\n\nconst FormRegister = ({ onSubmit }) => {\n  let { error } = useAuth();\n  console.log('error', error);\n\n  return (\n    <>\n      <Title>Реєстрація нового користувача</Title>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          confirmPassword: '',\n          userType: true,\n        }}\n        validationSchema={validationRegisterSchema}\n        onSubmit={({ email, password, userType }) =>\n          onSubmit({\n            email,\n            password,\n            userType: userType ? 'patient' : 'doctor',\n          })\n        }\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => {\n          return (\n            <FormStyled onSubmit={handleSubmit}>\n              <ImputWrap>\n                <Label>\n                  <FieldStyled\n                    error={errors.email && touched.email && errors.email}\n                    valid={values.email}\n                    type=\"email\"\n                    name=\"email\"\n                    value={values.email}\n                    onChange={e => {\n                      error = null;\n                      handleChange(e);\n                    }}\n                    onBlur={handleBlur}\n                    placeholder=\"e-mail\"\n                    required\n                  />\n                  {errors.email && touched.email && (\n                    <TextError>{errors.email}</TextError>\n                  )}\n                  {error && (\n                    <TextError>\n                      {error.status === 409 &&\n                        'Користувач з таким адресом електроної пошти вже існує'}\n                      {error.status === 400 &&\n                        'Невірний формат електроної пошти'}\n                    </TextError>\n                  )}\n                </Label>\n\n                <Label>\n                  <FieldStyled\n                    error={\n                      errors.password && touched.password && errors.password\n                    }\n                    type={'password'}\n                    name=\"password\"\n                    value={values.password}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"Пароль\"\n                    required\n                  />\n                  {errors.password && touched.password && (\n                    <TextError>{errors.password}</TextError>\n                  )}\n\n                  <PassValidateBox value={values.password} />\n                </Label>\n\n                <Label>\n                  <FieldStyled\n                    error={\n                      errors.confirmPassword &&\n                      touched.confirmPassword &&\n                      errors.confirmPassword\n                    }\n                    type={'password'}\n                    name=\"confirmPassword\"\n                    value={values.confirmPassword}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"Повторити пароль\"\n                    required\n                  />\n                  {errors.confirmPassword && touched.confirmPassword && (\n                    <TextError>{errors.confirmPassword}</TextError>\n                  )}\n                </Label>\n\n                <LabelCheckboxStyled>\n                  <LabelCheckboxText value={values.userType}>\n                    Пацієнт\n                  </LabelCheckboxText>\n                  <FieldCheckboxStyled\n                    type={'checkbox'}\n                    name=\"userType\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    component={CheckboxToggle}\n                  />\n                  <LabelCheckboxText value={!values.userType}>\n                    Лікар\n                  </LabelCheckboxText>\n                </LabelCheckboxStyled>\n              </ImputWrap>\n              <NavWrap>\n                <Button type=\"submit\">Зберегти та продовжити </Button>\n              </NavWrap>\n            </FormStyled>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nexport default FormRegister;\n","import { styled } from 'styled-components';\n\nexport const Title = styled.h2`\n  color: ${({ theme }) => theme.color.secondary};\n  text-align: center;\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n","import CheckboxToggle from 'components/CheckboxToggle/CheckboxToggle';\nimport {\n  Button,\n  FieldCheckboxStyled,\n  FormStyled,\n  ImputWrap,\n  LabelCheckboxStyled,\n  NavWrap,\n} from 'components/FormLogin/FormLogin.styled';\nimport { LabelCheckboxText } from 'components/FormRegister/FormRegister.styled';\nimport { Formik } from 'formik';\nimport { Title } from './FormTypeUser.styled';\n\nconst FormTypeUser = ({ onSubmit }) => {\n  return (\n    <>\n      <Formik\n        initialValues={{\n          userType: true,\n        }}\n        onSubmit={({ userType }) =>\n          onSubmit({\n            userType: userType ? 'patient' : 'doctor',\n          })\n        }\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => {\n          return (\n            <FormStyled onSubmit={handleSubmit}>\n              <Title>Виберіть тип користувача</Title>\n              <ImputWrap style={{ paddingTop: 28 }}>\n                <LabelCheckboxStyled>\n                  <LabelCheckboxText value={values.userType}>\n                    Пацієнт\n                  </LabelCheckboxText>\n                  <FieldCheckboxStyled\n                    type={'checkbox'}\n                    name=\"userType\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    component={CheckboxToggle}\n                  />\n                  <LabelCheckboxText value={!values.userType}>\n                    Лікар\n                  </LabelCheckboxText>\n                </LabelCheckboxStyled>\n              </ImputWrap>\n              <NavWrap style={{ paddingBottom: 80 }}>\n                <Button type=\"submit\">Зберегти та продовжити </Button>\n              </NavWrap>\n            </FormStyled>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nexport default FormTypeUser;\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(97, 97, 97, 0.6);\n  backdrop-filter: blur(4px);\n  z-index: 1200;\n`;\n\nexport const CloseWrap = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n`;\nexport const ModalContainer = styled.div`\n  background-color: ${p => p.theme.color.primary};\n  min-width: 500px;\n  /* height: 300px; */\n  padding: 14px;\n  margin: 0 auto;\n  border-radius: 20px;\n  z-index: 2000;\n  //   @media screen and (min-width: 768px) {\n  //     width: 580px;\n  //     /* height: 326px; */\n  //   }\n`;\nexport const BtnStyled = styled.button`\n  //   width: 100%;\n  cursor: pointer;\n`;\n","import * as React from 'react';\nconst IconCross = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={20}\n    height={20}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      stroke={props.fill || '#04827A'}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"m16 8-8 8m0-8 8 8\"\n    />\n  </svg>\n);\nexport default IconCross;\n","import { useCallback, useEffect } from 'react';\nimport { Backdrop, ModalContainer, BtnStyled, CloseWrap } from './Modal.styled';\nimport IconCross from 'images/icons/IconCross';\n\nconst Modal = ({ children, onClick }) => {\n  const handleKeyDown = useCallback(\n    evt => {\n      document.body.style.overflow = 'auto';\n      if (evt.code === 'Escape') {\n        onClick();\n      }\n    },\n    [onClick]\n  );\n\n  document.body.style.overflow = 'hidden';\n\n  const handleBackdropClick = evt => {\n    if (evt.currentTarget === evt.target) {\n      onClick();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  return (\n    <Backdrop onClick={handleBackdropClick}>\n      <ModalContainer>\n        <CloseWrap>\n          <BtnStyled\n            onClick={() => {\n              document.body.style.overflow = 'auto';\n              onClick();\n            }}\n          >\n            <IconCross />\n          </BtnStyled>\n        </CloseWrap>\n        {children}\n      </ModalContainer>\n    </Backdrop>\n  );\n};\nexport default Modal;\n","import FormRegister from 'components/FormRegister/FormRegister';\nimport FormTypeUser from 'components/FormTypeUser/FormTypeUser';\nimport Modal from 'components/Modal/Modal';\nimport OrBoxAotorization from 'components/OrBoxAotorization/OrBoxAotorization';\nimport { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { register } from 'redux/auth/operations';\n\nconst RegisterPage = () => {\n  const location = useLocation();\n  const [isOpenModal, setIsOpenModal] = useState(\n    location.pathname === '/register/typeUser'\n  );\n  const dispatch = useDispatch();\n\n  const handleRegisterSubmit = async values => {\n    console.log('register - values', values);\n    dispatch(register(values));\n  };\n\n  const handleRegisterTypeUser = async values => {\n    console.log('register - values', values);\n    setIsOpenModal(false);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n\n      <FormRegister onSubmit={handleRegisterSubmit} />\n      <OrBoxAotorization />\n\n      {isOpenModal && (\n        <Modal onClick={() => console.log(false)}>\n          <FormTypeUser onSubmit={handleRegisterTypeUser} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default RegisterPage;\n","import * as Yup from 'yup';\n\nexport const validationRegisterSchema = Yup.object().shape({\n  email: Yup.string()\n    .required('Поле обов`язкове')\n    .email('Введіть дійсну адресу електронної пошти'),\n  password: Yup.string()\n    .required('Поле обов`язкове')\n    .min(8, 'Пароль має бути не менше 8 символів')\n    .max(32, 'Пароль має бути менше 32 символів')\n    .matches(\n      /^(?=.*[A-Z])(?=.*\\d).{8,16}$/,\n      'Пароль повинен містити мінімум 8 латинських символів, одну велику літеру, одну цифру'\n    ),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Паролі повинні збігатися')\n    .required('Поле обов`язкове'),\n});\n","const { validationRegisterSchema } = require('./RegisterSchema');\nconst { validationLoginSchema } = require('./loginSchema');\n\nmodule.exports = {\n  validationLoginSchema,\n  validationRegisterSchema,\n};\n","import * as Yup from 'yup';\n\nexport const validationLoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .required('Поле обов`язкове')\n    .email('Введіть дійсну адресу електронної пошти'),\n  password: Yup.string()\n    .required('Поле обов`язкове')\n    .min(8, 'Пароль має бути не менше 8 символів')\n    .max(32, 'Пароль має бути менше 32 символів')\n    .matches(\n      /^(?=.*[A-Z])(?=.*\\d).{8,16}$/,\n      'Пароль повинен містити мінімум 8 латинських символів, одну велику літеру, одну цифру'\n    ),\n});\n"],"names":["StyledLabel","styled","_templateObject","_taggedTemplateLiteral","StyledField","Field","_templateObject2","FormStyled","Form","Title","_ref","theme","color","secondary","_ref2","fontFamily","ImputWrap","_templateObject3","FieldStyled","_templateObject4","_ref3","error","main","_ref4","btnLogOut","LabelCheckboxStyled","_templateObject5","FieldCheckboxStyled","_templateObject6","Label","_templateObject7","Button","_templateObject8","_ref5","_ref6","_ref7","secondaryMain","_ref8","StyledRefreshPassword","NavLink","_templateObject9","_ref9","_ref10","StyledNavLink","_templateObject10","_ref11","_ref12","_ref13","TextError","_templateObject11","_templateObject12","_ref14","_ref15","NavWrap","_templateObject13","_ref16","indicator","_templateObject14","_templateObject15","props","_jsxs","_objectSpread","xmlns","width","height","fill","children","_jsx","fillRule","d","clipRule","Line","LineText","style","display","flexDirection","alignItems","justifyContent","paddingTop","columnGap","href","IconGoogle","IconFacebook","ValidateBox","ValidateBoxItem","passwordMin8Valid","string","min","passwordLatinLettersValid","matches","passwordLettersUpperCaseValid","passwordOneNumberValid","value","_useState","useState","_useState2","_slicedToArray","passwordMin8","setPasswordMin8","_useState3","_useState4","passwordLatinLetters","setPasswordLatinLetters","_useState5","_useState6","passwordLettersUpperCase","setPasswordLettersUpperCase","_useState7","_useState8","passwordOneNumber","setPasswordOneNumber","useEffect","isValid","then","res","IconDone","LabelCheckboxText","btn","ToggleWrap","Toggle","e","type","name","field","onSubmit","useAuth","console","log","_Fragment","Formik","initialValues","email","password","confirmPassword","userType","validationSchema","validationRegisterSchema","values","errors","touched","handleChange","handleBlur","handleSubmit","valid","onChange","onBlur","placeholder","required","status","PassValidateBox","component","CheckboxToggle","paddingBottom","Backdrop","CloseWrap","ModalContainer","p","primary","BtnStyled","stroke","strokeLinecap","strokeLinejoin","strokeWidth","onClick","handleKeyDown","useCallback","evt","document","body","overflow","code","window","addEventListener","removeEventListener","currentTarget","target","IconCross","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","location","useLocation","pathname","isOpenModal","setIsOpenModal","dispatch","useDispatch","handleRegisterSubmit","_asyncToGenerator","_callee","_context","register","_x","apply","arguments","handleRegisterTypeUser","_callee2","_context2","_x2","Helmet","FormRegister","OrBoxAotorization","Modal","FormTypeUser","Yup","shape","max","oneOf","require","validationLoginSchema","module"],"sourceRoot":""}