{"version":3,"file":"static/js/923.5ae2de2d.chunk.js","mappings":"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","sources":["images/icons/IconGoogle.js","components/OrBoxAotorization/OrBoxAotorization.styled.js","images/icons/IconFacebook.js","components/OrBoxAotorization/OrBoxAotorization.jsx","components/FormRegister/FormRegister.jsx","components/CheckboxToggle/CheckboxToggle.styled.js","components/CheckboxToggle/CheckboxToggle.js","components/FormRegister/FormRegister.styled.js","components/FormTypeUser/FormTypeUser.styled.js","components/FormTypeUser/FormTypeUser.js","pages/authPages/RegisterPage.jsx"],"sourcesContent":["import * as React from 'react';\nconst IconGoogle = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={36}\n    height={36}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"#4285F4\"\n      fillRule=\"evenodd\"\n      d=\"M35.5 18.398c0-1.241-.114-2.434-.325-3.58H18.357v6.77h9.61c-.414 2.187-1.672 4.04-3.563 5.281v4.391h5.771c3.377-3.046 5.325-7.533 5.325-12.862Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#34A853\"\n      fillRule=\"evenodd\"\n      d=\"M18.356 35.5c4.822 0 8.864-1.567 11.818-4.24l-5.77-4.39c-1.6 1.05-3.645 1.67-6.048 1.67-4.65 0-8.587-3.079-9.992-7.215H2.398v4.534c2.939 5.72 8.978 9.641 15.958 9.641Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#FBBC05\"\n      fillRule=\"evenodd\"\n      d=\"M8.365 21.325A10.329 10.329 0 0 1 7.805 18c0-1.154.203-2.275.56-3.325v-4.534H2.4a17.209 17.209 0 0 0 0 15.718l5.966-4.534Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#EA4335\"\n      fillRule=\"evenodd\"\n      d=\"M18.356 7.46c2.622 0 4.976.883 6.827 2.617l5.121-5.02C27.212 2.235 23.17.5 18.356.5c-6.98 0-13.02 3.922-15.958 9.64l5.966 4.535c1.405-4.136 5.341-7.215 9.992-7.215Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default IconGoogle;\n","import { styled } from 'styled-components';\n\nexport const Line = styled.div`\n  width: 350px;\n  height: 2px;\n  background-color: ${({ theme }) => theme.color.main};\n`;\n\nexport const LineText = styled.p`\n  color: ${({ theme }) => theme.color.main};\n  text-align: center;\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 16px;\n  font-style: italic;\n  font-weight: 400;\n  line-height: normal;\n`;\n","import * as React from 'react';\n\nconst IconFacebook = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={51}\n    height={51}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"#337FFF\"\n      d=\"m34.163 27.186.998-6.331h-6.144V16.74c0-1.731.858-3.423 3.6-3.423h2.833V7.925a34.363 34.363 0 0 0-4.987-.425c-5.057 0-8.358 3.037-8.358 8.527v4.828H16.5v6.331h5.605V42.5h6.912V27.186h5.146Z\"\n    />\n  </svg>\n);\nexport default IconFacebook;\n","import IconGoogle from 'images/icons/IconGoogle';\nimport { Line, LineText } from './OrBoxAotorization.styled';\nimport IconFacebook from 'images/icons/IconFacebook';\n\nconst OrBoxAotorization = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: 800,\n          paddingTop: 52,\n          alignItems: 'center',\n        }}\n      >\n        <Line />\n        <LineText>або</LineText>\n        <Line />\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          columnGap: 100,\n          width: 800,\n          paddingTop: 27,\n          alignItems: 'center',\n        }}\n      >\n        <a href=\"https://project-back1v0.onrender.com/api/users/google/\">\n          <IconGoogle />\n        </a>\n        <a href=\"https://project-back1v0.onrender.com/api/users/facebook/\">\n          <IconFacebook />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default OrBoxAotorization;\n","import {\n  Button,\n  FieldStyled,\n  FormStyled,\n  ImputWrap,\n  Label,\n  NavWrap,\n  TextError,\n  Title,\n} from 'components/FormLogin/FormLogin.styled';\nimport PassValidateBox from 'components/PassValidateBox/PassValidateBox';\nimport { Formik } from 'formik';\nimport { validationRegisterSchema } from 'schemas';\nimport { useAuth } from 'hooks';\n\nconst FormRegister = ({ onSubmit }) => {\n  let { error } = useAuth();\n\n  return (\n    <>\n      <Title>Реєстрація нового користувача</Title>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          confirmPassword: '',\n        }}\n        validationSchema={validationRegisterSchema}\n        onSubmit={({ email, password, userType }) =>\n          onSubmit({\n            email,\n            password,\n          })\n        }\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => {\n          return (\n            <FormStyled onSubmit={handleSubmit}>\n              <ImputWrap>\n                <Label>\n                  <FieldStyled\n                    error={errors.email && touched.email && errors.email}\n                    valid={values.email}\n                    type=\"email\"\n                    name=\"email\"\n                    value={values.email}\n                    onChange={e => {\n                      error = null;\n                      handleChange(e);\n                    }}\n                    onBlur={handleBlur}\n                    placeholder=\"e-mail\"\n                    required\n                  />\n                  {errors.email && touched.email && (\n                    <TextError>{errors.email}</TextError>\n                  )}\n                  {error && (\n                    <TextError>\n                      {error.status === 409 &&\n                        'Користувач з таким адресом електроної пошти вже існує'}\n                      {error.status === 400 &&\n                        'Невірний формат електроної пошти'}\n                    </TextError>\n                  )}\n                </Label>\n\n                <Label>\n                  <FieldStyled\n                    error={\n                      errors.password && touched.password && errors.password\n                    }\n                    type={'password'}\n                    name=\"password\"\n                    value={values.password}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"Пароль\"\n                    required\n                  />\n                  {errors.password && touched.password && (\n                    <TextError>{errors.password}</TextError>\n                  )}\n\n                  <PassValidateBox value={values.password} />\n                </Label>\n\n                <Label>\n                  <FieldStyled\n                    error={\n                      errors.confirmPassword &&\n                      touched.confirmPassword &&\n                      errors.confirmPassword\n                    }\n                    type={'password'}\n                    name=\"confirmPassword\"\n                    value={values.confirmPassword}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"Повторити пароль\"\n                    required\n                  />\n                  {errors.confirmPassword && touched.confirmPassword && (\n                    <TextError>{errors.confirmPassword}</TextError>\n                  )}\n                </Label>\n              </ImputWrap>\n              <NavWrap>\n                <Button type=\"submit\">Зберегти та продовжити </Button>\n              </NavWrap>\n            </FormStyled>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nexport default FormRegister;\n","import { styled } from 'styled-components';\n\nexport const ToggleWrap = styled.div`\n  display: flex;\n  align-items: center;\n  //   justify-content: ${({ value }) => (value ? 'flex-start' : 'flex-end')};\n  //   transition: justify-content 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  width: 75px;\n  height: 30px;\n  padding: 0 1.5px;\n\n  border-radius: 15px;\n  border: 1px solid black;\n`;\n\nexport const Toggle = styled.div`\n  transform: ${({ value }) => (value ? 'translateX(0px)' : 'translateX(48px)')};\n  transition: transform 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  width: 26px;\n  height: 26px;\n  background: ${({ theme }) => theme.color.main};\n  border-radius: 15px;\n`;\n","import { StyledField, StyledLabel } from '../Checkbox/Checkbox.stuled';\nimport { Toggle, ToggleWrap } from './CheckboxToggle.styled';\n\nconst CheckboxToggle = e => {\n  return (\n    <StyledLabel>\n      <StyledField type={e.type} name={e.field.name} />\n      <ToggleWrap value={e.field.value}>\n        <Toggle value={e.field.value} />\n      </ToggleWrap>\n    </StyledLabel>\n  );\n};\n\nexport default CheckboxToggle;\n","import { Field } from 'formik';\nimport { styled } from 'styled-components';\n\nexport const LabelCheckboxStyled = styled.label`\n  display: flex;\n  justify-content: center;\n  column-gap: 40px;\n`;\n\nexport const FieldCheckboxStyled = styled(Field)``;\n\nexport const LabelCheckboxText = styled.span`\n  color: ${({ theme, value }) =>\n    value ? theme.color.secondary : theme.color.btn};\n  text-align: center;\n  align-self: center;\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n","import { Form } from 'formik';\nimport { styled } from 'styled-components';\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  color: ${({ theme }) => theme.color.secondary};\n  text-align: center;\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n","import CheckboxToggle from 'components/CheckboxToggle/CheckboxToggle';\nimport {\n  Button,\n  FieldCheckboxStyled,\n  ImputWrap,\n  LabelCheckboxStyled,\n  NavWrap,\n} from 'components/FormLogin/FormLogin.styled';\nimport { LabelCheckboxText } from 'components/FormRegister/FormRegister.styled';\nimport { Formik } from 'formik';\nimport { FormStyled, Title } from './FormTypeUser.styled';\n\nconst FormTypeUser = ({ onSubmit }) => {\n  return (\n    <>\n      <Formik\n        initialValues={{\n          userType: true,\n        }}\n        onSubmit={({ userType }) =>\n          onSubmit({\n            userType: userType ? 'patient' : 'doctor',\n          })\n        }\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => {\n          return (\n            <FormStyled onSubmit={handleSubmit}>\n              <Title>Виберіть тип користувача</Title>\n              <ImputWrap style={{ paddingTop: 28 }}>\n                <LabelCheckboxStyled>\n                  <LabelCheckboxText value={values.userType}>\n                    Пацієнт\n                  </LabelCheckboxText>\n                  <FieldCheckboxStyled\n                    type={'checkbox'}\n                    name=\"userType\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    component={CheckboxToggle}\n                  />\n                  <LabelCheckboxText value={!values.userType}>\n                    Лікар\n                  </LabelCheckboxText>\n                </LabelCheckboxStyled>\n              </ImputWrap>\n              <NavWrap>\n                <Button type=\"submit\">Зберегти та продовжити </Button>\n              </NavWrap>\n            </FormStyled>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nexport default FormTypeUser;\n","import FormRegister from 'components/FormRegister/FormRegister';\nimport FormTypeUser from 'components/FormTypeUser/FormTypeUser';\nimport Modal from 'componentsReusable/Modal/Modal';\nimport OrBoxAotorization from 'components/OrBoxAotorization/OrBoxAotorization';\nimport { useAuth } from 'hooks';\nimport { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { register, setAuthHeader, updateUserType } from 'redux/auth/operations';\nimport { saveToken } from 'redux/auth/slice';\n\nconst RegisterPage = () => {\n  const location = useLocation();\n  const { isLoggedIn, userType } = useAuth();\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const accessToken = searchParams.get('accessToken');\n  const dispatch = useDispatch();\n  false && setSearchParams(); // eslint\n\n  useEffect(() => {\n    if (accessToken) {\n      dispatch(saveToken(accessToken));\n      setAuthHeader(accessToken);\n    }\n  }, [dispatch, accessToken]);\n\n  useEffect(() => {\n    location.pathname === '/register/typeUser' && setIsOpenModal(true);\n    if (!isOpenModal) {\n      isLoggedIn && !userType && setIsOpenModal(true);\n    }\n  }, [location, isLoggedIn, userType, setSearchParams, isOpenModal]);\n\n  const handleRegisterSubmit = async values => {\n    dispatch(register(values));\n  };\n\n  const handleRegisterTypeUser = async values => {\n    if (accessToken) {\n      values.accessToken = accessToken;\n    }\n    dispatch(updateUserType(values));\n    document.body.style.overflow = 'auto';\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n\n      <FormRegister\n        onSubmit={handleRegisterSubmit}\n        setIsOpenModal={setIsOpenModal}\n      />\n      <OrBoxAotorization />\n\n      {isOpenModal && (\n        <Modal>\n          <FormTypeUser onSubmit={handleRegisterTypeUser} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["props","_jsxs","_objectSpread","xmlns","width","height","fill","children","_jsx","fillRule","d","clipRule","Line","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","color","main","LineText","_templateObject2","_ref2","_ref3","fontFamily","style","display","flexDirection","alignItems","justifyContent","paddingTop","columnGap","href","IconGoogle","IconFacebook","onSubmit","error","useAuth","_Fragment","Title","Formik","initialValues","email","password","confirmPassword","validationSchema","validationRegisterSchema","userType","values","errors","touched","handleChange","handleBlur","handleSubmit","FormStyled","ImputWrap","Label","FieldStyled","valid","type","name","value","onChange","e","onBlur","placeholder","required","TextError","status","PassValidateBox","NavWrap","Button","ToggleWrap","Toggle","StyledLabel","StyledField","field","LabelCheckboxText","Field","_templateObject3","secondary","btn","Form","LabelCheckboxStyled","FieldCheckboxStyled","component","CheckboxToggle","location","useLocation","_useAuth","isLoggedIn","_useState","useState","_useState2","_slicedToArray","isOpenModal","setIsOpenModal","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","accessToken","get","dispatch","useDispatch","useEffect","saveToken","setAuthHeader","pathname","handleRegisterSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","register","stop","_x","apply","arguments","handleRegisterTypeUser","_callee2","_context2","updateUserType","document","body","overflow","_x2","Helmet","FormRegister","OrBoxAotorization","Modal","FormTypeUser"],"sourceRoot":""}