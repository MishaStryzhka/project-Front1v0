{"version":3,"file":"static/js/76.2387d8b2.chunk.js","mappings":"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","sources":["images/icons/IconGoogle.js","components/OrBoxAotorization/OrBoxAotorization.styled.js","components/OrBoxAotorization/OrBoxAotorization.jsx","componentsReusable/Buttons/CTABigButton/CTABigButton.styled.js","componentsReusable/Buttons/CTABigButton/CTABigButton.js","components/Forms/FormRegister/FormRegister.jsx","components/CheckboxToggle/CheckboxToggle.styled.js","components/CheckboxToggle/CheckboxToggle.js","components/Forms/FormRegister/FormRegister.styled.js","components/Forms/FormTypeUser/FormTypeUser.styled.js","components/Forms/FormTypeUser/FormTypeUser.js","pages/authPages/RegisterPage/RegisterPage.styled.js","pages/authPages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import * as React from 'react';\nconst IconGoogle = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={36}\n    height={36}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"#4285F4\"\n      fillRule=\"evenodd\"\n      d=\"M35.5 18.398c0-1.241-.114-2.434-.325-3.58H18.357v6.77h9.61c-.414 2.187-1.672 4.04-3.563 5.281v4.391h5.771c3.377-3.046 5.325-7.533 5.325-12.862Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#34A853\"\n      fillRule=\"evenodd\"\n      d=\"M18.356 35.5c4.822 0 8.864-1.567 11.818-4.24l-5.77-4.39c-1.6 1.05-3.645 1.67-6.048 1.67-4.65 0-8.587-3.079-9.992-7.215H2.398v4.534c2.939 5.72 8.978 9.641 15.958 9.641Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#FBBC05\"\n      fillRule=\"evenodd\"\n      d=\"M8.365 21.325A10.329 10.329 0 0 1 7.805 18c0-1.154.203-2.275.56-3.325v-4.534H2.4a17.209 17.209 0 0 0 0 15.718l5.966-4.534Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#EA4335\"\n      fillRule=\"evenodd\"\n      d=\"M18.356 7.46c2.622 0 4.976.883 6.827 2.617l5.121-5.02C27.212 2.235 23.17.5 18.356.5c-6.98 0-13.02 3.922-15.958 9.64l5.966 4.535c1.405-4.136 5.341-7.215 9.992-7.215Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default IconGoogle;\n","import { styled } from 'styled-components';\n\nexport const Line = styled.div`\n  width: 350px;\n  height: 2px;\n  background-color: ${({ theme }) => theme.color.main};\n`;\n\nexport const LineText = styled.p`\n  color: ${({ theme }) => theme.color.main};\n  text-align: center;\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 16px;\n  font-style: italic;\n  font-weight: 400;\n  line-height: normal;\n`;\n","import IconGoogle from 'images/icons/IconGoogle';\nimport { Line, LineText } from './OrBoxAotorization.styled';\n// import IconFacebook from 'images/icons/IconFacebook';\n\nconst OrBoxAotorization = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n        paddingTop: 40,\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: 800,\n          alignItems: 'center',\n        }}\n      >\n        <Line />\n        <LineText>або</LineText>\n        <Line />\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          columnGap: 100,\n          width: 800,\n          paddingTop: 27,\n          alignItems: 'center',\n        }}\n      >\n        <a href=\"https://project-back1v0.onrender.com/api/users/google/\">\n          <IconGoogle />\n        </a>\n        {/* <a href=\"https://project-back1v0.onrender.com/api/users/facebook/\">\n          <IconFacebook />\n        </a> */}\n      </div>\n    </div>\n  );\n};\n\nexport default OrBoxAotorization;\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  color: ${({ theme }) => theme.color.text};\n  font-family: Rubik;\n  font-size: 30px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n\n  display: flex;\n  // width: 280px;\n  // height: 120px;\n  padding: 40px;\n  justify-content: center;\n  align-items: center;\n\n  border-radius: 80px;\n  background: ${({ theme }) => theme.color.CTA};\n\n  &:hover {\n    background: ${({ theme }) => theme.color.CTAHover};\n  }\n\n  &:focus {\n    background: ${({ theme }) => theme.color.CTAPressed};\n  }\n\n  ${({ disabled, theme }) => disabled && `background: ${theme.color.disable}`};\n`;\n","import { StyledButton } from './CTABigButton.styled';\n\nconst CTABigButton = ({\n  className,\n  type,\n  disabled,\n  onClick = () => {},\n  to,\n  children,\n  id,\n  active,\n  form,\n}) => {\n  return (\n    <StyledButton\n      disabled={disabled}\n      className={className}\n      onClick={() => onClick()}\n      type={type}\n      id={id}\n      active={active}\n      form={form}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default CTABigButton;\n","import {\n  FormStyled,\n  ImputWrap,\n  Label,\n} from 'components/Forms/FormLogin/FormLogin.styled';\nimport PassValidateBox from 'components/PassValidateBox/PassValidateBox';\nimport { Formik } from 'formik';\nimport { validationRegisterSchema } from 'schemas';\nimport { useAuth } from 'hooks';\nimport Input from 'componentsReusable/Inputs/Input/Input';\n\nconst FormRegister = ({ onSubmit }) => {\n  let { error } = useAuth();\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          confirmPassword: '',\n        }}\n        validationSchema={validationRegisterSchema}\n        onSubmit={({ email, password, userType }) =>\n          onSubmit({\n            email,\n            password,\n          })\n        }\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => {\n          return (\n            <FormStyled id=\"FormRegister\" onSubmit={handleSubmit}>\n              <ImputWrap>\n                <Label>\n                  <Input\n                    error={\n                      (errors.email && touched.email && errors.email) ||\n                      (error &&\n                        error.status === 409 &&\n                        'Користувач з таким адресом електроної пошти вже існує') ||\n                      (error &&\n                        error.status === 400 &&\n                        'Невірний формат електроної пошти')\n                    }\n                    valid={values.email}\n                    type=\"email\"\n                    name=\"email\"\n                    value={values.email}\n                    onChange={e => {\n                      error = null;\n                      handleChange(e);\n                    }}\n                    onBlur={handleBlur}\n                    placeholder=\"e-mail\"\n                    required\n                  />\n                </Label>\n\n                <Label>\n                  <Input\n                    error={\n                      errors.password && touched.password && errors.password\n                    }\n                    type={'password'}\n                    name=\"password\"\n                    value={values.password}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"Пароль\"\n                    required\n                  />\n                  <PassValidateBox value={values.password} />\n                </Label>\n\n                <Label>\n                  <Input\n                    error={\n                      errors.confirmPassword &&\n                      touched.confirmPassword &&\n                      errors.confirmPassword\n                    }\n                    type={'password'}\n                    name=\"confirmPassword\"\n                    value={values.confirmPassword}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"Повторити пароль\"\n                    required\n                  />\n                  {/* {errors.confirmPassword && touched.confirmPassword && (\n                    <TextError>{errors.confirmPassword}</TextError>\n                  )} */}\n                </Label>\n              </ImputWrap>\n              {/* <NavWrap>\n                <Button type=\"submit\">Зберегти та продовжити </Button>\n              </NavWrap> */}\n            </FormStyled>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nexport default FormRegister;\n","import { styled } from 'styled-components';\n\nexport const ToggleWrap = styled.div`\n  display: flex;\n  align-items: center;\n  //   justify-content: ${({ value }) => (value ? 'flex-start' : 'flex-end')};\n  //   transition: justify-content 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  width: 75px;\n  height: 30px;\n  padding: 0 1.5px;\n\n  border-radius: 15px;\n  border: 1px solid black;\n`;\n\nexport const Toggle = styled.div`\n  transform: ${({ value }) => (value ? 'translateX(0px)' : 'translateX(48px)')};\n  transition: transform 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  width: 26px;\n  height: 26px;\n  background: ${({ theme }) => theme.color.main};\n  border-radius: 15px;\n`;\n","import { StyledField, StyledLabel } from '../Checkbox/Checkbox.stuled';\nimport { Toggle, ToggleWrap } from './CheckboxToggle.styled';\n\nconst CheckboxToggle = e => {\n  return (\n    <StyledLabel>\n      <StyledField type={e.type} name={e.field.name} />\n      <ToggleWrap value={e.field.value}>\n        <Toggle value={e.field.value} />\n      </ToggleWrap>\n    </StyledLabel>\n  );\n};\n\nexport default CheckboxToggle;\n","import { Field } from 'formik';\nimport { styled } from 'styled-components';\n\nexport const LabelCheckboxStyled = styled.label`\n  display: flex;\n  justify-content: center;\n  column-gap: 40px;\n`;\n\nexport const FieldCheckboxStyled = styled(Field)``;\n\nexport const LabelCheckboxText = styled.span`\n  color: ${({ theme, value }) =>\n    value ? theme.color.secondary : theme.color.btn};\n  text-align: center;\n  align-self: center;\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n","import { LabelCheckbox } from 'components/Forms/FormLogin/FormLogin.styled';\nimport { Form } from 'formik';\nimport { styled } from 'styled-components';\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-top: 40px;\n  padding-top: 0px;\n`;\n\nexport const Title = styled.h2`\n  color: ${({ theme }) => theme.color.secondary};\n  text-align: center;\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const StyledLabelCheckbox = styled(LabelCheckbox)`\n  padding-top: 0;\n`;\n","import CheckboxToggle from 'components/CheckboxToggle/CheckboxToggle';\nimport {\n  FieldCheckboxStyled,\n  ImputWrap,\n} from 'components/Forms/FormLogin/FormLogin.styled';\nimport { LabelCheckboxText } from 'components/Forms/FormRegister/FormRegister.styled';\nimport { Formik } from 'formik';\nimport { FormStyled, StyledLabelCheckbox } from './FormTypeUser.styled';\n\nconst FormTypeUser = ({ onSubmit }) => {\n  return (\n    <>\n      <Formik\n        initialValues={{\n          userType: true,\n        }}\n        onSubmit={({ userType }) =>\n          onSubmit({\n            userType: userType ? 'patient' : 'doctor',\n          })\n        }\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => {\n          return (\n            <FormStyled id=\"FormTypeUser\" onSubmit={handleSubmit}>\n              <ImputWrap>\n                <StyledLabelCheckbox>\n                  <LabelCheckboxText value={values.userType}>\n                    Пацієнт\n                  </LabelCheckboxText>\n                  <FieldCheckboxStyled\n                    type={'checkbox'}\n                    name=\"userType\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    component={CheckboxToggle}\n                  />\n                  <LabelCheckboxText value={!values.userType}>\n                    Лікар\n                  </LabelCheckboxText>\n                </StyledLabelCheckbox>\n              </ImputWrap>\n            </FormStyled>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nexport default FormTypeUser;\n","import CTABigButton from 'componentsReusable/Buttons/CTABigButton/CTABigButton';\nimport Container from 'componentsReusable/Container/Container';\nimport MainContent from 'componentsReusable/MainContent/MainContent';\nimport styled from 'styled-components';\n\nexport const StyledMainContent = styled(MainContent)`\n  padding: 40px;\n  margin: 0 auto;\n  gap: 40px;\n`;\n\nexport const StyledContainer = styled(Container)`\n  padding-top: 80px;\n  box-sizing: border-box;\n`;\n\nexport const StyledCTABigButton = styled(CTABigButton)`\n  margin: 40px auto 0;\n`;\n","import FormRegister from 'components/Forms/FormRegister/FormRegister';\nimport FormTypeUser from 'components/Forms/FormTypeUser/FormTypeUser';\nimport Modal from 'componentsReusable/Modal/Modal';\nimport OrBoxAotorization from 'components/OrBoxAotorization/OrBoxAotorization';\nimport { useAuth } from 'hooks';\nimport { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { register, setAuthHeader, updateUserType } from 'redux/auth/operations';\nimport { saveToken } from 'redux/auth/slice';\nimport Title from 'componentsReusable/Titles/Title/Title';\nimport {\n  StyledCTABigButton,\n  StyledContainer,\n  StyledMainContent,\n} from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  const location = useLocation();\n  const { isLoggedIn, userType } = useAuth();\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const accessToken = searchParams.get('accessToken');\n  const dispatch = useDispatch();\n  false && setSearchParams(); // eslint\n\n  useEffect(() => {\n    if (accessToken) {\n      dispatch(saveToken(accessToken));\n      setAuthHeader(accessToken);\n    }\n  }, [dispatch, accessToken]);\n\n  useEffect(() => {\n    location.pathname === '/register/typeUser' && setIsOpenModal(true);\n    if (!isOpenModal) {\n      isLoggedIn && !userType && setIsOpenModal(true);\n    }\n  }, [location, isLoggedIn, userType, setSearchParams, isOpenModal]);\n\n  const handleRegisterSubmit = async values => {\n    dispatch(register(values));\n  };\n\n  const handleRegisterTypeUser = async values => {\n    if (accessToken) {\n      values.accessToken = accessToken;\n    }\n    dispatch(updateUserType(values));\n    document.body.style.overflow = 'auto';\n  };\n\n  return (\n    <StyledContainer>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n\n      <StyledMainContent width=\"800px\">\n        <Title>Реєстрація нового користувача</Title>\n        <FormRegister onSubmit={handleRegisterSubmit} />\n      </StyledMainContent>\n\n      <StyledCTABigButton type=\"submit\" form=\"FormRegister\">\n        Зареєструватися\n      </StyledCTABigButton>\n\n      <OrBoxAotorization />\n\n      {isOpenModal && (\n        <Modal>\n          <Title type=\"modal\">Виберіть тип користувача</Title>\n          <FormTypeUser onSubmit={handleRegisterTypeUser} />\n          <StyledCTABigButton type=\"submit\" form=\"FormTypeUser\">\n            Увійти\n          </StyledCTABigButton>\n        </Modal>\n      )}\n    </StyledContainer>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["props","_jsxs","_objectSpread","xmlns","width","height","fill","children","_jsx","fillRule","d","clipRule","Line","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","color","main","LineText","_templateObject2","_ref2","_ref3","fontFamily","style","display","flexDirection","alignItems","paddingTop","justifyContent","columnGap","href","IconGoogle","StyledButton","text","CTA","CTAHover","_ref4","CTAPressed","_ref5","disabled","concat","disable","className","type","_ref$onClick","onClick","to","id","active","form","onSubmit","error","useAuth","_Fragment","Formik","initialValues","email","password","confirmPassword","validationSchema","validationRegisterSchema","userType","values","errors","touched","handleChange","handleBlur","handleSubmit","FormStyled","ImputWrap","Label","Input","status","valid","name","value","onChange","e","onBlur","placeholder","required","PassValidateBox","ToggleWrap","Toggle","StyledLabel","StyledField","field","LabelCheckboxText","Field","_templateObject3","secondary","btn","Form","StyledLabelCheckbox","LabelCheckbox","FieldCheckboxStyled","component","CheckboxToggle","StyledMainContent","MainContent","StyledContainer","Container","StyledCTABigButton","CTABigButton","location","useLocation","_useAuth","isLoggedIn","_useState","useState","_useState2","_slicedToArray","isOpenModal","setIsOpenModal","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","accessToken","get","dispatch","useDispatch","useEffect","saveToken","setAuthHeader","pathname","handleRegisterSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","register","stop","_x","apply","arguments","handleRegisterTypeUser","_callee2","_context2","updateUserType","document","body","overflow","_x2","Helmet","Title","FormRegister","OrBoxAotorization","Modal","FormTypeUser"],"sourceRoot":""}