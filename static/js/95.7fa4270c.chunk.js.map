{"version":3,"file":"static/js/95.7fa4270c.chunk.js","mappings":"wKAmCA,EAlCmB,SAAAA,GAAK,OACtBC,EAAAA,EAAAA,MAAA,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEC,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,QACDN,GAAK,IAAAO,SAAA,EAETC,EAAAA,EAAAA,KAAA,QACEF,KAAK,UACLG,SAAS,UACTC,EAAE,kJACFC,SAAS,aAEXH,EAAAA,EAAAA,KAAA,QACEF,KAAK,UACLG,SAAS,UACTC,EAAE,0KACFC,SAAS,aAEXH,EAAAA,EAAAA,KAAA,QACEF,KAAK,UACLG,SAAS,UACTC,EAAE,6HACFC,SAAS,aAEXH,EAAAA,EAAAA,KAAA,QACEF,KAAK,UACLG,SAAS,UACTC,EAAE,uKACFC,SAAS,eAEP,E,mBC/BKC,EAAOC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qEAGR,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,MAAMC,IAAI,IAGxCC,EAAWP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+JACrB,SAAAO,GAAQ,OAAAA,EAALL,MAAkBC,MAAMC,IAAI,IAGzB,SAAAI,GAAQ,OAAAA,EAALN,MAAkBO,UAAU,ICoChD,EA5C0B,WACxB,OACEvB,EAAAA,EAAAA,MAAA,OACEwB,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,WAAY,SAEZC,WAAY,IACZtB,SAAA,EAEFN,EAAAA,EAAAA,MAAA,OACEwB,MAAO,CACLC,QAAS,OACTI,eAAgB,gBAChB1B,MAAO,IACPwB,WAAY,UACZrB,SAAA,EAEFC,EAAAA,EAAAA,KAACI,EAAI,KACLJ,EAAAA,EAAAA,KAACY,EAAQ,CAAAb,SAAC,wBACVC,EAAAA,EAAAA,KAACI,EAAI,QAEPJ,EAAAA,EAAAA,KAAA,OACEiB,MAAO,CACLC,QAAS,OACTI,eAAgB,SAChBC,UAAW,IACX3B,MAAO,IACPyB,WAAY,GACZD,WAAY,UACZrB,UAEFC,EAAAA,EAAAA,KAAA,KAAGwB,KAAK,yDAAwDzB,UAC9DC,EAAAA,EAAAA,KAACyB,EAAU,UAQrB,C,qEC5CaC,E,QAAerB,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uZAC9B,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,MAAMiB,IAAI,IAe1B,SAAAb,GAAQ,OAAAA,EAALL,MAAkBC,MAAMkB,GAAG,IAG5B,SAAAb,GAAQ,OAAAA,EAALN,MAAkBC,MAAMmB,QAAQ,IAInC,SAAAC,GAAQ,OAAAA,EAALrB,MAAkBC,MAAMqB,UAAU,IAGnD,SAAAC,GAAA,IAAGC,EAAQD,EAARC,SAAUxB,EAAKuB,EAALvB,MAAK,OAAOwB,GAAQ,eAAAC,OAAmBzB,EAAMC,MAAMyB,QAAS,I,UCA7E,EA1BqB,SAAH3B,GAUX,IATL4B,EAAS5B,EAAT4B,UACAC,EAAI7B,EAAJ6B,KACAJ,EAAQzB,EAARyB,SAAQK,EAAA9B,EACR+B,QAAAA,OAAO,IAAAD,EAAG,WAAO,EAACA,EAElBvC,GADES,EAAFgC,GACQhC,EAART,UACA0C,EAAEjC,EAAFiC,GACAC,EAAMlC,EAANkC,OACAC,EAAInC,EAAJmC,KAEA,OACE3C,EAAAA,EAAAA,KAAC0B,EAAY,CACXO,SAAUA,EACVG,UAAWA,EACXG,QAAS,kBAAMA,GAAS,EACxBF,KAAMA,EACNI,GAAIA,EACJC,OAAQA,EACRC,KAAMA,EAAK5C,SAEVA,GAGP,C,yLCiEA,EA7EkB,SAAHS,GAAsB,IAAhBoC,EAAQpC,EAARoC,SACbC,GAAUC,EAAAA,EAAAA,KAAVD,MACN,OACE7C,EAAAA,EAAAA,KAAA+C,EAAAA,SAAA,CAAAhD,UACEC,EAAAA,EAAAA,KAACgD,EAAAA,GAAM,CACLC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,YAAY,GAEdC,iBAAkBC,EAAAA,sBAClBV,SAAUA,EAAS7C,SAElB,SAAAe,GAOM,IANLyC,EAAMzC,EAANyC,OACAC,EAAM1C,EAAN0C,OACAC,EAAO3C,EAAP2C,QACAC,EAAY5C,EAAZ4C,aACAC,EAAU7C,EAAV6C,WACAC,EAAY9C,EAAZ8C,aAEA,OACEnE,EAAAA,EAAAA,MAACoE,EAAAA,GAAU,CAACpB,GAAG,YAAYG,SAAUgB,EAAa7D,SAAA,EAChDN,EAAAA,EAAAA,MAACqE,EAAAA,GAAS,CAAA/D,SAAA,EACRC,EAAAA,EAAAA,KAAC+D,EAAAA,GAAK,CAAAhE,UACJC,EAAAA,EAAAA,KAACgE,EAAAA,EAAK,CACJnB,MAAOW,EAAON,OAASO,EAAQP,OAASM,EAAON,MAC/Ce,MAAOV,EAAOL,MACdb,KAAK,QACL6B,KAAK,QACLC,SAAU,SAAAC,GACRvB,EAAQ,KACRa,EAAaU,EACf,EACAC,OAAQV,EACRW,YAAY,cAIhBtE,EAAAA,EAAAA,KAAC+D,EAAAA,GAAK,CAAAhE,UACJC,EAAAA,EAAAA,KAACgE,EAAAA,EAAK,CACJnB,MACGY,EAAQN,UAAYK,EAAOL,UAC3BN,GACkB,MAAjBA,EAAM0B,QACN,iMAEJlC,KAAM,WACN6B,KAAK,WACLC,SAAU,SAAAC,GACRvB,EAAQ,KACRa,EAAaU,EACf,EACAC,OAAQV,EACRW,YAAY,+CAKlB7E,EAAAA,EAAAA,MAAC+E,EAAAA,GAAa,CAAAzE,SAAA,EACZC,EAAAA,EAAAA,KAACyE,EAAAA,GAAmB,CAClBpC,KAAM,WACN6B,KAAK,aAELG,OAAQV,EACRe,UAAWC,EAAAA,KAEb3E,EAAAA,EAAAA,KAAC4E,EAAAA,EAAY,CAAA7E,SAAC,qGAItB,KAIR,E,kGCnFa8E,GAAkBxE,EAAAA,EAAAA,IAAOyE,EAAAA,EAAPzE,CAAiBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2DAKnCwE,GAAoB1E,EAAAA,EAAAA,IAAO2E,EAAAA,EAAP3E,CAAmBQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6DAMvC0E,EAAQ5E,EAAAA,GAAAA,GAAS6E,IAAAA,GAAA3E,EAAAA,EAAAA,GAAA,wIACnB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,MAAMyE,SAAS,IAE9B,SAAArE,GAAQ,OAAAA,EAALL,MAAkBO,UAAU,IAOnCoE,GAAqB/E,EAAAA,EAAAA,IAAOgF,EAAAA,EAAPhF,CAAoBiF,IAAAA,GAAA/E,EAAAA,EAAAA,GAAA,kCAIzCgF,EAAsBlF,EAAAA,GAAAA,OAAamF,IAAAA,GAAAjF,EAAAA,EAAAA,GAAA,8NAC/B,SAAAQ,GAAQ,OAAAA,EAALN,MAAkBO,UAAU,IAanCyE,EAAepF,EAAAA,GAAAA,EAAQqF,IAAAA,GAAAnF,EAAAA,EAAAA,GAAA,iNACzB,SAAAuB,GAAQ,OAAAA,EAALrB,MAAkBC,MAAMiB,IAAI,IAc7BgE,GAAiBtF,EAAAA,EAAAA,IAAOuF,EAAAA,GAAPvF,CAAewF,IAAAA,GAAAtF,EAAAA,EAAAA,GAAA,oE,4DC5CrCuF,EAAiBC,EAAQ,MAAzBD,aA0ER,EAxE2B,SAAHtF,GAAqB,IAAf+B,EAAO/B,EAAP+B,QACtBM,GAAUC,EAAAA,EAAAA,KAAVD,MACNA,GAASmD,QAAQC,IAAI,QAASpD,GAE9B,IAAMD,EAAW,SAAAqB,GACf+B,QAAQC,IAAI,yFAAoBhC,GAChC1B,GACF,EAEA,OAAOuD,GACL9F,EAAAA,EAAAA,KAACkG,EAAAA,QAAK,CAAC3D,QAAS,kBAAMA,GAAS,EAACxC,UAC9BN,EAAAA,EAAAA,MAAC0G,EAAAA,GAAG,CAAApG,SAAA,EACFC,EAAAA,EAAAA,KAACiF,EAAAA,EAAK,CAAC5C,KAAK,QAAOtC,SAAC,gFACpBC,EAAAA,EAAAA,KAACgD,EAAAA,GAAM,CACLC,cAAe,CAAEC,MAAO,IAExBN,SAAUA,EAAS7C,SAElB,SAAAe,GAQM,IAPLyC,EAAMzC,EAANyC,OACAC,EAAM1C,EAAN0C,OACAC,EAAO3C,EAAP2C,QAEAC,GADa5C,EAAbsF,cACYtF,EAAZ4C,cACAC,EAAU7C,EAAV6C,WACY7C,EAAZ8C,aAEA,OACE5D,EAAAA,EAAAA,KAACqG,EAAAA,EAAI,CACH5D,GAAG,gBAIH6D,YAAa,kBAAM1D,EAASW,EAAO,EAACxD,UAEpCC,EAAAA,EAAAA,KAACuG,EAAAA,GAAS,CAAAxG,UACRC,EAAAA,EAAAA,KAAC+D,EAAAA,GAAK,CAAAhE,UACJC,EAAAA,EAAAA,KAACgE,EAAAA,EAAK,CACJnB,MAAOW,EAAON,OAASO,EAAQP,OAASM,EAAON,MAC/CsD,MAAOjD,EAAOL,MACdb,KAAK,QACL6B,KAAK,QACLC,SAAU,SAAAC,GACRvB,EAAQ,KACRa,EAAaU,EACf,EACAC,OAAQV,EACRW,YAAY,SACZmC,UAAQ,SAMpB,KAEFzG,EAAAA,EAAAA,KAAC0G,EAAAA,GAAe,CAAA3G,SAAC,+2BAKjBC,EAAAA,EAAAA,KAAC2G,EAAAA,GAAa,CAAA5G,UACZC,EAAAA,EAAAA,KAAC4G,EAAAA,GAAM,CAACvE,KAAK,SAASM,KAAK,gBAAe5C,SAAC,uGAMjD8G,SAASC,cAAc,UAE3B,ECxBA,EA9CkB,WAChB,IAAAC,GACEC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GADVI,EAAwBF,EAAA,GAAEG,EAA2BH,EAAA,GAEtDI,GAAWC,EAAAA,EAAAA,MAEXC,EAAiB,eAAA/G,GAAAgH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMpE,GAAM,OAAAkE,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACpCV,GAASW,EAAAA,EAAAA,IAAMzE,IAAS,wBAAAsE,EAAAI,OAAA,GAAAN,EAAA,KACzB,gBAFsBO,GAAA,OAAA1H,EAAA2H,MAAA,KAAAC,UAAA,KAIvB,OACE3I,EAAAA,EAAAA,MAACoF,EAAe,CAAA9E,SAAA,EACdC,EAAAA,EAAAA,KAACqI,EAAAA,EAAM,CAAAtI,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aAGTN,EAAAA,EAAAA,MAACsF,EAAiB,CAACnF,MAAM,QAAOG,SAAA,EAC9BC,EAAAA,EAAAA,KAACiF,EAAK,CAAAlF,SAAC,8BACPC,EAAAA,EAAAA,KAACsI,EAAS,CAAC1F,SAAU2E,QAGvBvH,EAAAA,EAAAA,KAACoF,EAAkB,CAAC/C,KAAK,SAASM,KAAK,YAAW5C,SAAC,0CAInDC,EAAAA,EAAAA,KAACuF,EAAmB,CAClBlD,KAAK,SACLE,QAAS,kBAAM6E,GAA4B,EAAK,EAACrH,SAClD,gFAIDN,EAAAA,EAAAA,MAACgG,EAAY,CAAA1F,SAAA,CAAC,2FAEZC,EAAAA,EAAAA,KAAC2F,EAAc,CAACnD,GAAG,YAAWzC,SAAC,2EAEjCC,EAAAA,EAAAA,KAACuI,EAAAA,EAAiB,IAEjBpB,IACCnH,EAAAA,EAAAA,KAACwI,EAAkB,CACjBjG,QAAS,kBAAM6E,GAA4B,EAAM,MAK3D,C","sources":["images/icons/IconGoogle.js","components/OrBoxAotorization/OrBoxAotorization.styled.js","components/OrBoxAotorization/OrBoxAotorization.jsx","componentsReusable/Buttons/CTABigButton/CTABigButton.styled.js","componentsReusable/Buttons/CTABigButton/CTABigButton.js","components/Forms/FormLogin/FormLogin.js","pages/authPages/LoginPage/LoginPage.styled.js","components/Modals/ModalResetPassword/ModalResetPassword.js","pages/authPages/LoginPage/LoginPage.jsx"],"sourcesContent":["import * as React from 'react';\nconst IconGoogle = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={36}\n    height={36}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"#4285F4\"\n      fillRule=\"evenodd\"\n      d=\"M35.5 18.398c0-1.241-.114-2.434-.325-3.58H18.357v6.77h9.61c-.414 2.187-1.672 4.04-3.563 5.281v4.391h5.771c3.377-3.046 5.325-7.533 5.325-12.862Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#34A853\"\n      fillRule=\"evenodd\"\n      d=\"M18.356 35.5c4.822 0 8.864-1.567 11.818-4.24l-5.77-4.39c-1.6 1.05-3.645 1.67-6.048 1.67-4.65 0-8.587-3.079-9.992-7.215H2.398v4.534c2.939 5.72 8.978 9.641 15.958 9.641Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#FBBC05\"\n      fillRule=\"evenodd\"\n      d=\"M8.365 21.325A10.329 10.329 0 0 1 7.805 18c0-1.154.203-2.275.56-3.325v-4.534H2.4a17.209 17.209 0 0 0 0 15.718l5.966-4.534Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#EA4335\"\n      fillRule=\"evenodd\"\n      d=\"M18.356 7.46c2.622 0 4.976.883 6.827 2.617l5.121-5.02C27.212 2.235 23.17.5 18.356.5c-6.98 0-13.02 3.922-15.958 9.64l5.966 4.535c1.405-4.136 5.341-7.215 9.992-7.215Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default IconGoogle;\n","import { styled } from 'styled-components';\n\nexport const Line = styled.div`\n  width: 350px;\n  height: 2px;\n  background-color: ${({ theme }) => theme.color.main};\n`;\n\nexport const LineText = styled.p`\n  color: ${({ theme }) => theme.color.main};\n  text-align: center;\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 16px;\n  font-style: italic;\n  font-weight: 400;\n  line-height: normal;\n`;\n","import IconGoogle from 'images/icons/IconGoogle';\nimport { Line, LineText } from './OrBoxAotorization.styled';\n// import IconFacebook from 'images/icons/IconFacebook';\n\nconst OrBoxAotorization = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n        paddingTop: 40,\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: 800,\n          alignItems: 'center',\n        }}\n      >\n        <Line />\n        <LineText>або</LineText>\n        <Line />\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          columnGap: 100,\n          width: 800,\n          paddingTop: 27,\n          alignItems: 'center',\n        }}\n      >\n        <a href=\"https://project-back1v0.onrender.com/api/users/google/\">\n          <IconGoogle />\n        </a>\n        {/* <a href=\"https://project-back1v0.onrender.com/api/users/facebook/\">\n          <IconFacebook />\n        </a> */}\n      </div>\n    </div>\n  );\n};\n\nexport default OrBoxAotorization;\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  color: ${({ theme }) => theme.color.text};\n  font-family: Rubik;\n  font-size: 30px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n\n  display: flex;\n  // width: 280px;\n  // height: 120px;\n  padding: 40px;\n  justify-content: center;\n  align-items: center;\n\n  border-radius: 80px;\n  background: ${({ theme }) => theme.color.CTA};\n\n  &:hover {\n    background: ${({ theme }) => theme.color.CTAHover};\n  }\n\n  &:focus {\n    background: ${({ theme }) => theme.color.CTAPressed};\n  }\n\n  ${({ disabled, theme }) => disabled && `background: ${theme.color.disable}`};\n`;\n","import { StyledButton } from './CTABigButton.styled';\n\nconst CTABigButton = ({\n  className,\n  type,\n  disabled,\n  onClick = () => {},\n  to,\n  children,\n  id,\n  active,\n  form,\n}) => {\n  return (\n    <StyledButton\n      disabled={disabled}\n      className={className}\n      onClick={() => onClick()}\n      type={type}\n      id={id}\n      active={active}\n      form={form}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default CTABigButton;\n","import { Formik } from 'formik';\nimport { validationLoginSchema } from 'schemas';\nimport {\n  FieldCheckboxStyled,\n  FormStyled,\n  Label,\n  LabelCheckbox,\n  ImputWrap,\n  TextCheckbox,\n} from './FormLogin.styled';\nimport Checkbox from 'components/Checkbox/Checkbox';\nimport { useAuth } from 'hooks';\nimport Input from 'componentsReusable/Inputs/Input/Input';\n\nconst FormLogin = ({ onSubmit }) => {\n  let { error } = useAuth();\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          rememberMe: false,\n        }}\n        validationSchema={validationLoginSchema}\n        onSubmit={onSubmit}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => {\n          return (\n            <FormStyled id=\"FormLogin\" onSubmit={handleSubmit}>\n              <ImputWrap>\n                <Label>\n                  <Input\n                    error={errors.email && touched.email && errors.email}\n                    value={values.email}\n                    type=\"email\"\n                    name=\"email\"\n                    onChange={e => {\n                      error = null;\n                      handleChange(e);\n                    }}\n                    onBlur={handleBlur}\n                    placeholder=\"E-mail\"\n                  />\n                </Label>\n\n                <Label>\n                  <Input\n                    error={\n                      (touched.password && errors.password) ||\n                      (error &&\n                        error.status === 401 &&\n                        'Невірна електронна пошта або пароль')\n                    }\n                    type={'password'}\n                    name=\"password\"\n                    onChange={e => {\n                      error = null;\n                      handleChange(e);\n                    }}\n                    onBlur={handleBlur}\n                    placeholder=\"Пароль\"\n                  />\n                </Label>\n              </ImputWrap>\n\n              <LabelCheckbox>\n                <FieldCheckboxStyled\n                  type={'checkbox'}\n                  name=\"rememberMe\"\n                  // onChange={handleChange}\n                  onBlur={handleBlur}\n                  component={Checkbox}\n                />\n                <TextCheckbox>запам’ятати мене</TextCheckbox>\n              </LabelCheckbox>\n            </FormStyled>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nexport default FormLogin;\n","import CTABigButton from 'componentsReusable/Buttons/CTABigButton/CTABigButton';\nimport Container from 'componentsReusable/Container/Container';\nimport MainContent from 'componentsReusable/MainContent/MainContent';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledContainer = styled(Container)`\n  padding-top: 80px;\n  box-sizing: border-box;\n`;\n\nexport const StyledMainContent = styled(MainContent)`\n  padding: 40px;\n  margin: 0 auto;\n  gap: 40px;\n`;\n\nexport const Title = styled.h1`\n  color: ${({ theme }) => theme.color.secondary};\n\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const StyledCTABigButton = styled(CTABigButton)`\n  margin: 40px auto 0;\n`;\n\nexport const StyledResetPassword = styled.button`\n  font-family: ${({ theme }) => theme.fontFamily};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  text-decoration-line: underline;\n\n  display: block;\n  margin: 20px auto 0;\n\n  cursor: pointer;\n`;\n\nexport const WrapRegister = styled.p`\n  color: ${({ theme }) => theme.color.text};\n\n  display: flex;\n  justify-content: center;\n\n  margin-top: 20px;\n\n  font-family: Rubik;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const StyledRegister = styled(NavLink)`\n  text-decoration-line: underline;\n  padding-left: 5px;\n`;\n","import Form from 'components/Forms/Form/Form';\nimport { Formik } from 'formik';\nimport { useAuth } from 'hooks';\nimport Modal from 'componentsReusable/Modal/Modal';\nimport {\n  Box,\n  InputWrap,\n} from 'components/Modals/ModalLeaveRequest/ModalLeaveRequest.styled';\nimport { Button, Label } from 'components/Forms/FormLogin/FormLogin.styled';\nimport {\n  ButtonWrapper,\n  FormDescription,\n} from 'components/Modals/ModalRefreshEmail/ModalRefreshEmail.styled';\nimport Input from 'componentsReusable/Inputs/Input/Input';\nimport Title from 'componentsReusable/Titles/Title/Title';\n\nconst { createPortal } = require('react-dom');\n\nconst ModalResetPassword = ({ onClick }) => {\n  let { error } = useAuth();\n  error && console.log('error', error);\n\n  const onSubmit = value => {\n    console.log('Для відновлення:', value);\n    onClick();\n  };\n\n  return createPortal(\n    <Modal onClick={() => onClick()}>\n      <Box>\n        <Title type=\"modal\">Забули пароль?</Title>\n        <Formik\n          initialValues={{ email: '' }}\n          // validationSchema={validationDoctorPageSchema}\n          onSubmit={onSubmit}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            setFieldValue,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n          }) => {\n            return (\n              <Form\n                id=\"ResetPassword\"\n                // onSubmit={handleSubmit}\n                // isRequiredFields\n                // save={() => onSubmit(values)}\n                sendRequest={() => onSubmit(values)}\n              >\n                <InputWrap>\n                  <Label>\n                    <Input\n                      error={errors.email && touched.email && errors.email}\n                      valid={values.email}\n                      type=\"email\"\n                      name=\"email\"\n                      onChange={e => {\n                        error = null;\n                        handleChange(e);\n                      }}\n                      onBlur={handleBlur}\n                      placeholder=\"E-mail\"\n                      required\n                    />\n                  </Label>\n                </InputWrap>\n              </Form>\n            );\n          }}\n        </Formik>\n        <FormDescription>\n          Ви отримаєте лист на вказану вами електрону адресу. Лист міститиме\n          відоме лише вам посилання, за яким вам необхідно перейти, щоб\n          завершити процедуру відновлення пароля.\n        </FormDescription>\n        <ButtonWrapper>\n          <Button type=\"submit\" form=\"ResetPassword\">\n            Відновити пароль\n          </Button>\n        </ButtonWrapper>\n      </Box>\n    </Modal>,\n    document.querySelector('#modal')\n  );\n};\n\nexport default ModalResetPassword;\n","import FormLogin from 'components/Forms/FormLogin/FormLogin';\nimport OrBoxAotorization from 'components/OrBoxAotorization/OrBoxAotorization';\n\nimport { Helmet } from 'react-helmet';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport {\n  StyledCTABigButton,\n  StyledMainContent,\n  StyledResetPassword,\n  StyledRegister,\n  Title,\n  WrapRegister,\n  StyledContainer,\n} from './LoginPage.styled';\nimport { useState } from 'react';\nimport ModalResetPassword from 'components/Modals/ModalResetPassword/ModalResetPassword';\n\nconst LoginPage = () => {\n  const [isOpenModalResetPassword, setIsOpenModalResetPassword] =\n    useState(false);\n  const dispatch = useDispatch();\n\n  const handleLogInSubmit = async values => {\n    dispatch(logIn(values));\n  };\n\n  return (\n    <StyledContainer>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n\n      <StyledMainContent width=\"800px\">\n        <Title>Вхід</Title>\n        <FormLogin onSubmit={handleLogInSubmit} />\n      </StyledMainContent>\n\n      <StyledCTABigButton type=\"submit\" form=\"FormLogin\">\n        Увійти\n      </StyledCTABigButton>\n\n      <StyledResetPassword\n        type=\"button\"\n        onClick={() => setIsOpenModalResetPassword(true)}\n      >\n        Забули пароль?\n      </StyledResetPassword>\n\n      <WrapRegister>\n        Ще немає акаунту?\n        <StyledRegister to=\"/register\">Приєднатися</StyledRegister>\n      </WrapRegister>\n      <OrBoxAotorization />\n\n      {isOpenModalResetPassword && (\n        <ModalResetPassword\n          onClick={() => setIsOpenModalResetPassword(false)}\n        />\n      )}\n    </StyledContainer>\n  );\n};\n\nexport default LoginPage;\n"],"names":["props","_jsxs","_objectSpread","xmlns","width","height","fill","children","_jsx","fillRule","d","clipRule","Line","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","color","main","LineText","_templateObject2","_ref2","_ref3","fontFamily","style","display","flexDirection","alignItems","paddingTop","justifyContent","columnGap","href","IconGoogle","StyledButton","text","CTA","CTAHover","_ref4","CTAPressed","_ref5","disabled","concat","disable","className","type","_ref$onClick","onClick","to","id","active","form","onSubmit","error","useAuth","_Fragment","Formik","initialValues","email","password","rememberMe","validationSchema","validationLoginSchema","values","errors","touched","handleChange","handleBlur","handleSubmit","FormStyled","ImputWrap","Label","Input","value","name","onChange","e","onBlur","placeholder","status","LabelCheckbox","FieldCheckboxStyled","component","Checkbox","TextCheckbox","StyledContainer","Container","StyledMainContent","MainContent","Title","_templateObject3","secondary","StyledCTABigButton","CTABigButton","_templateObject4","StyledResetPassword","_templateObject5","WrapRegister","_templateObject6","StyledRegister","NavLink","_templateObject7","createPortal","require","console","log","Modal","Box","setFieldValue","Form","sendRequest","InputWrap","valid","required","FormDescription","ButtonWrapper","Button","document","querySelector","_useState","useState","_useState2","_slicedToArray","isOpenModalResetPassword","setIsOpenModalResetPassword","dispatch","useDispatch","handleLogInSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","logIn","stop","_x","apply","arguments","Helmet","FormLogin","OrBoxAotorization","ModalResetPassword"],"sourceRoot":""}